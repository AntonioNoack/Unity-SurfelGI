#pragma max_recursion_depth 31 // system maximum according to Unity, isn't mentioned on the docs tho
// https://docs.unity3d.com/2023.1/Documentation/ScriptReference/Experimental.Rendering.RayTracingShader-maxRecursionDepth.html
// must not be surpassed, or Unity will crash (why? ðŸ˜Ÿ)

#include "RTLib.cginc"
#include "Surfel.cginc"

uint _FrameIndex;
float _LightAccuArea;

RWStructuredBuffer<Triangle>    g_Triangles;
RWStructuredBuffer<LightSample> g_Samples;

[shader("miss")]
void LS1MissShader(inout RayPayload payload : SV_RayPayload) {
    payload.color = float3(0, 0, 0);
}

[shader("raygeneration")]
void TestPass1() {

#include "SampleTri.cginc"

    // trace ray into scene, and collect probabilty (weight) + color + where we landed
    RayDesc ray;
    ray.Origin = rayOrigin;
    ray.Direction = rayDirection;
    ray.TMin = 0.01;
    ray.TMax = 1000;
    
    RayPayload payload = (RayPayload) 0;
    payload.color = float3(tri.r,tri.g,tri.b);
    payload.weight = 1;
    payload.pos = ray.Origin;
    payload.dir = ray.Direction;
    payload.depth = 0;

    TraceRay(_RaytracingAccelerationStructure, 0, 0xFF, 0, 1, 0, ray, payload);

    // then save our findings into the temporary array for the second part
    LightSample result;
    result.color = payload.color;
    result.weight = payload.weight;
    result.surfacePos = payload.pos;
    result.surfaceDir = payload.dir;
    g_Samples[index] = result;
    
}
